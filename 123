@Test
void testGetCpQuote_MultiCustomerIndicatorBranch() {
    AddCreditProtectionQuotationV2Rq request = new AddCreditProtectionQuotationV2Rq();
    QuotationInfoRq infoRq = new QuotationInfoRq();
    infoRq.setApplicant(new ArrayList<>(List.of(new Applicant())));
    infoRq.setMulticustomerIndicator(true);
    infoRq.setCreditApplication(new CreditApplication());
    request.setQuotationInfoRq(infoRq);

    when(cpFac.buildRequestBodyForMulticustomerDiscount(any())).thenAnswer(inv -> {
        QuotationInfoRq rq = inv.getArgument(0);
        rq.getApplicant().add(new Applicant()); // dummy
        return rq;
    });

    AddCreditProtectionQuotationV2Rs responseMock = new AddCreditProtectionQuotationV2Rs();
    AddCreditProtectionQuotationV2RsQuotation quotation = new AddCreditProtectionQuotationV2RsQuotation();
    quotation.setApplicant(List.of(new AddCreditProtectionQuotationV2RsQuotationApplicantInner()));
    responseMock.setQuotation(quotation);

    when(cpFac.getCreditProtectionQuotationV2(any(), any())).thenReturn(responseMock);

    ResponseEntity<AddCreditProtectionQuotationWarningV2Rs> response =
            controller.getCpQuote("en", "Bearer token", request);

    assertThat(response.getStatusCode()).isEqualTo(HttpStatus.CREATED);
    assertThat(response.getBody()).isNotNull();
}