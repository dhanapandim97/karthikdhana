import org.junit.jupiter.api.Test;
import org.mockito.Mockito;

import java.util.Properties;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

class PropertiesFileReaderDefaultBranchTest {

    private Properties props;

    private PropertiesFileReader createReaderWith(String key, String value) {
        props = new Properties();
        props.setProperty(key, value);

        try (var mockedApi = Mockito.mockStatic(ApiConfig.class)) {
            ApiConfig apiConfig = mock(ApiConfig.class);
            when(ApiConfig.getInstance()).thenReturn(apiConfig);
            when(apiConfig.getPropertiesConfig("testfile")).thenReturn(props);
            return new PropertiesFileReader("testfile");
        }
    }

    @Test
    void testDefaultBranchInGetKeyValueItem() {
        PropertiesFileReader reader = createReaderWith("R1", "SomeValue");

        // Mock the enum so it isnâ€™t ENGLISH or FRENCH
        ErrorDisplayLanguage fakeLang = mock(ErrorDisplayLanguage.class);
        when(fakeLang.getLangStr()).thenReturn("ZZ");

        String result = reader.getKeyValueItem("R1", fakeLang);
        assertEquals("R1:SomeValue", result);
    }
}