private void testMultiCustomerLifeBranchFixed(String productType) throws Exception {
    // Request setup
    AddCreditProtectionQuotationRq request = new AddCreditProtectionQuotationRq();
    AddCreditProtectionQuotationRqQuotation infoRq = new AddCreditProtectionQuotationRqQuotation();
    infoRq.setApplicant(new ArrayList<>(List.of(new AddCreditProtectionQuotationRqQuotationApplicantInner())));
    infoRq.setMultiCustomerLifeIndicator(true);

    AddCreditProtectionQuotationRqQuotationCreditApplication creditApp =
            new AddCreditProtectionQuotationRqQuotationCreditApplication();
    creditApp.setProductTypeCd(productType);
    infoRq.setCreditApplication(creditApp);
    request.setQuotation(infoRq);

    // Mock buildRequestBodyForMultiCustomerDiscount: adds dummy applicant
    when(cpFac.buildRequestBodyForMultiCustomerDiscount(any())).thenAnswer(inv -> {
        AddCreditProtectionQuotationRqQuotation rq = inv.getArgument(0);
        rq.getApplicant().add(new AddCreditProtectionQuotationRqQuotationApplicantInner());
        return rq;
    });

    // Mock getCreditProtectionQuotationV2 to return non-null quotation with 2 applicants
    AddCreditProtectionQuotationV2RsQuotation quotation = new AddCreditProtectionQuotationV2RsQuotation();
    quotation.setApplicant(new ArrayList<>(List.of(
            new AddCreditProtectionQuotationV2RsQuotationApplicantInner(),
            new AddCreditProtectionQuotationV2RsQuotationApplicantInner() // dummy for removal
    )));
    when(cpFac.getCreditProtectionQuotationV2(any(), any())).thenReturn(quotation);

    // Act
    ResponseEntity<AddCreditProtectionQuotationWarningRs> response =
            controller.getCpQuoteWithAllPremium("en", "Bearer token", request);

    // Assert
    assertThat(response).isNotNull();
    assertThat(response.getBody()).isNotNull();
    assertThat(response.getBody().getQuotation()).isNotNull();

    List<AddCreditProtectionQuotationV2RsQuotationApplicantInner> applicants =
            response.getBody().getQuotation().getApplicant();

    // Controller removes dummy applicant
    assertThat(applicants).isNotNull();
    assertThat(applicants.size()).isEqualTo(1);
}