import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

import java.util.HashMap;
import java.util.Map;

class KeyValueServiceTest {

    private KeyValueService service;

    @BeforeEach
    void setUp() {
        service = new KeyValueService();
        // Assuming keyValueItems is accessible or can be set via reflection/setter
        Map<String, String> map = new HashMap<>();
        map.put("NO_EN", "some value");
        map.put("EN_FR", "[en]Hello[fr]Bonjour");
        map.put("FR_EN", "[fr]Bonjour[en]Hello");
        service.setKeyValueItems(map); // replace with actual injection if different
    }

    @Test
    void testEnglish_NoEnFlag() {
        // Covers: if (enFlagIndex < 0) branch
        String result = service.getKeyValueItem("NO_EN", ErrorDisplayLanguage.ENGLISH);
        assertEquals("NO_EN:some value", result);
    }

    @Test
    void testEnglish_WithFrAfterEn() {
        // Covers: if (frFlagIndex >= 0 && frFlagIndex > enFlagIndex) branch
        String result = service.getKeyValueItem("EN_FR", ErrorDisplayLanguage.ENGLISH);
        assertEquals("EN_FR:Hello", result);
    }

    @Test
    void testEnglish_WithFrBeforeEn() {
        // Covers: second if FALSE branch (frFlagIndex < enFlagIndex)
        String result = service.getKeyValueItem("FR_EN", ErrorDisplayLanguage.ENGLISH);
        assertEquals("FR_EN:Hello", result);
    }
}