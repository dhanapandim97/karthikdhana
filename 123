import com.fasterxml.jackson.databind.JavaType;
import com.fasterxml.jackson.databind.module.SimpleModule;
import com.fasterxml.jackson.dataformat.xml.XmlMapper;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.http.converter.HttpMessageConverter;
import org.springframework.http.converter.xml.MappingJackson2XmlHttpMessageConverter;

import java.util.List;

@Configuration
public class XmlConfig {

    @Bean
    public MappingJackson2XmlHttpMessageConverter xmlConverter() {
        XmlMapper xmlMapper = new XmlMapper();

        SimpleModule module = new SimpleModule() {
            @Override
            public void setupModule(SetupContext context) {
                super.setupModule(context);

                // Register our delegating deserializer for ALL beans
                context.addDeserializers(new Deserializers.Base() {
                    @Override
                    public JsonDeserializer<?> findBeanDeserializer(
                            JavaType type,
                            DeserializationConfig config,
                            BeanDescription beanDesc) {
                        // Only wrap "real POJOs" (ignore primitives, Maps, Lists, etc.)
                        if (beanDesc.getBeanClass().getPackage().getName().startsWith("com.mycompany")) {
                            return new GenericDelegatingDeserializer<>(type);
                        }
                        return null;
                    }
                });
            }
        };

        xmlMapper.registerModule(module);
        return new MappingJackson2XmlHttpMessageConverter(xmlMapper);
    }
}