@Test
void testGetCpQuoteWithAllPremium_MultiCustomerLifeBranch_LN2() throws Exception {
    // Build request
    AddCreditProtectionQuotationRq request = new AddCreditProtectionQuotationRq();
    AddCreditProtectionQuotationRqQuotation infoRq = new AddCreditProtectionQuotationRqQuotation();
    infoRq.setApplicant(new ArrayList<>(List.of(new AddCreditProtectionQuotationRqQuotationApplicantInner())));
    infoRq.setMultiCustomerLifeIndicator(true);

    AddCreditProtectionQuotationRqQuotationCreditApplication creditApp = new AddCreditProtectionQuotationRqQuotationCreditApplication();
    creditApp.setProductTypeCd("LN2"); // LN2 branch
    infoRq.setCreditApplication(creditApp);
    request.setQuotation(infoRq);

    // Mock factory to add dummy applicant
    when(cpFac.buildRequestBodyForMultiCustomerDiscount(any())).thenAnswer(inv -> {
        AddCreditProtectionQuotationRqQuotation rq = inv.getArgument(0);
        rq.getApplicant().add(new AddCreditProtectionQuotationRqQuotationApplicantInner()); // dummy
        return rq;
    });

    // Mock the service that returns cpQuotationRsV2 (fully initialized)
    AddCreditProtectionQuotationV2RsQuotation cpQuotationRsV2 = new AddCreditProtectionQuotationV2RsQuotation();
    cpQuotationRsV2.setApplicant(new ArrayList<>(List.of(
        new AddCreditProtectionQuotationV2RsQuotationApplicantInner(),
        new AddCreditProtectionQuotationV2RsQuotationApplicantInner() // dummy
    )));
    when(lonCreditProtectionQuotationService.buildFinalResponseForLoanMultiCustomerLifeOnly(
        any(), any(), any())).thenReturn(cpQuotationRsV2);

    // Act
    ResponseEntity<AddCreditProtectionQuotationWarningRs> response =
        controller.getCpQuoteWithAllPremium("en", "Bearer token", request);

    // Assert
    assertThat(response).isNotNull();
    assertThat(response.getBody()).isNotNull();
    assertThat(response.getBody().getQuotation()).isNotNull();
    assertThat(response.getBody().getQuotation().getApplicant()).hasSize(1); // dummy removed
}