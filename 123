import static org.assertj.core.api.Assertions.assertThat;

import java.lang.reflect.Constructor;
import java.lang.reflect.Method;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

class CpCustOwnershipTypeDAOTest {

    private CpCustOwnershipTypeDAO dao;

    @BeforeEach
    void setUp() throws Exception {
        Constructor<CpCustOwnershipTypeDAO> constructor =
                CpCustOwnershipTypeDAO.class.getDeclaredConstructor();
        constructor.setAccessible(true);
        dao = constructor.newInstance();
    }

    @Test
    void testParseCustomerTypeOwnership_FieldsLength() throws Exception {
        Method method = CpCustOwnershipTypeDAO.class
                .getDeclaredMethod("parseCustomerTypeOwnership", String.class);
        method.setAccessible(true);

        // fields.length == 1  --> covers if(fields.length >0)
        CPCustomerOwnershipType r1 = (CPCustomerOwnershipType) method.invoke(dao, "MN1");
        assertThat(r1.getMnemonic()).isEqualTo("MN1");
        assertThat(r1.getDescription()).isNull();

        // fields.length == 2 --> covers if(fields.length >1)
        CPCustomerOwnershipType r2 = (CPCustomerOwnershipType) method.invoke(dao, "MN2\tDesc2");
        assertThat(r2.getMnemonic()).isEqualTo("MN2");
        assertThat(r2.getDescription()).isEqualTo("Desc2");

        // fields.length == 3 --> covers if(fields.length >2)
        CPCustomerOwnershipType r3 = (CPCustomerOwnershipType) method.invoke(dao, "MN3\tDesc3\tFr3");
        assertThat(r3.getMnemonic()).isEqualTo("MN3");
        assertThat(r3.getDescription()).isEqualTo("Desc3");
        assertThat(r3.getFrench()).isEqualTo("Fr3");
    }
}